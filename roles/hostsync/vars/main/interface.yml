---
# Media→speed(Mbps)→NetBox interface TYPE *slugs*
# (adjust to your estate; these slugs are what the API expects)
_hostsync_iftype_logic_slugs:
  tp:
    "100": "100base-tx"
    "1000": "1000base-t"
    "2500": "2.5gbase-t"
    "5000": "5gbase-t"
    "10000": "10gbase-t"
  sfp:
    "1000": "1000base-x-sfp"
    "10000": "10gbase-x-sfpp"
    "25000": "25gbase-x-sfp28"
    "40000": 40gbase-x-qsfpp
    "50000": "50gbase-x-sfp56"    # If you run 50G SFP56 on your NetBox version, likely
    "100000": 100gbase-x-qsfp28
  default: "other"           # NetBox's generic "Other" slug

# Optional: pick the nearest *lower-or-equal* supported speed for the medium
hostsync_if_speed_best_key: >-
  {%- set table = _hostsync_iftype_logic_slugs.get(hostsync_if_medium, {}) -%}
  {%- set keys = table.keys() | map('int') | select('le', hostsync_if_speed_mbps) | list -%}
  {{ (keys | max | string) if keys else None }}

# Final lookup to a *slug* (handles bond masters as LAG)
hostsync_iftype_lookup_slug: >-
  {{
    _hostsync_iftype_logic_slugs.lag
      if (hostsync_diface_details.type | default('')) == 'bonding'
      else (
        _hostsync_iftype_logic_slugs.get(hostsync_if_medium, {})
          .get(hostsync_if_speed_best_key)
        | default(_hostsync_iftype_logic_slugs.default)
      )
  }}

hostsync_interface_system:
  - lo

hostsync_interface_mgmt:
  - idrac

hostsync_interface_exclude: "{{ hostsync_interface_system + hostsync_interface_mgmt }}"

_hostsync_primary_ipv4_cidr_logic: "{{ ansible_default_ipv4.network }}/{{ ansible_default_ipv4.netmask }}"
